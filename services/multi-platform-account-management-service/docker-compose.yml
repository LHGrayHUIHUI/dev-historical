version: '3.8'

services:
  # 多平台账号管理服务
  multi-platform-account-management-service:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: account-management-service
    ports:
      - "8091:8091"
    environment:
      - APP_NAME=Multi-Platform Account Management Service
      - DEBUG=false
      - HOST=0.0.0.0
      - PORT=8091
      - DATABASE_URL=postgresql://postgres:password@postgres:5432/historical_text_accounts
      - REDIS_URL=redis://redis:6379/0
      - ENCRYPTION_KEY=account-encryption-key-32-chars-long!
      - OAUTH_CALLBACK_BASE_URL=http://localhost:8091/api/v1/oauth/callback
      - DATABASE_POOL_SIZE=10
      - DATABASE_MAX_OVERFLOW=20
      - ALLOWED_ORIGINS=http://localhost:3000,http://localhost:8080
      - ALLOWED_HOSTS=localhost,127.0.0.1
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - account-management-net
    volumes:
      - ./logs:/app/logs
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8091/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

  # PostgreSQL数据库
  postgres:
    image: postgres:15-alpine
    container_name: account-management-postgres
    environment:
      - POSTGRES_DB=historical_text_accounts
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=password
      - POSTGRES_INITDB_ARGS=--encoding=UTF8 --lc-collate=C --lc-ctype=C
    ports:
      - "5433:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./scripts/init.sql:/docker-entrypoint-initdb.d/init.sql:ro
    networks:
      - account-management-net
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d historical_text_accounts"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis缓存
  redis:
    image: redis:7-alpine
    container_name: account-management-redis
    ports:
      - "6379:6379"
    command: redis-server --appendonly yes --maxmemory 256mb --maxmemory-policy allkeys-lru
    volumes:
      - redis_data:/data
    networks:
      - account-management-net
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 3

  # Nginx反向代理（可选）
  nginx:
    image: nginx:alpine
    container_name: account-management-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/conf.d:/etc/nginx/conf.d:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
      - nginx_logs:/var/log/nginx
    depends_on:
      - multi-platform-account-management-service
    networks:
      - account-management-net
    restart: unless-stopped
    profiles:
      - with-nginx

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local
  nginx_logs:
    driver: local

networks:
  account-management-net:
    driver: bridge
    name: account-management-network