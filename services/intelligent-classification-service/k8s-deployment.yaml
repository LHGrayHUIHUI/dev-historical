# 智能分类服务Kubernetes部署配置
# 包含Deployment、Service、ConfigMap和资源配置

apiVersion: v1
kind: ConfigMap
metadata:
  name: intelligent-classification-config
  namespace: historical-text
  labels:
    app: intelligent-classification-service
    component: config
data:
  SERVICE_NAME: "intelligent-classification-service"
  SERVICE_VERSION: "1.0.0"
  ENVIRONMENT: "production"
  DEBUG: "false"
  API_HOST: "0.0.0.0"
  API_PORT: "8007"
  API_PREFIX: "/api/v1"
  STORAGE_SERVICE_URL: "http://storage-service:8002"
  STORAGE_SERVICE_TIMEOUT: "180"
  STORAGE_SERVICE_RETRIES: "3"
  NLP_SERVICE_URL: "http://nlp-service:8004"
  KNOWLEDGE_GRAPH_SERVICE_URL: "http://knowledge-graph-service:8006"
  MAX_TEXT_LENGTH: "10000"
  MAX_BATCH_SIZE: "100"
  CLASSIFICATION_TIMEOUT: "300"
  MAX_CONCURRENT_TASKS: "5"
  TEMP_DIR: "/tmp/intelligent-classification"
  MODEL_DIR: "/app/models"
  CACHE_DIR: "/app/cache"
  ENABLE_CACHE: "true"
  CACHE_MAX_SIZE: "1000"
  CACHE_TTL: "3600"
  LOG_LEVEL: "INFO"
  MLFLOW_TRACKING_URI: "sqlite:///app/mlflow/mlflow.db"
  MLFLOW_EXPERIMENT_NAME: "intelligent-classification"
  MLFLOW_ENABLED: "true"
  ENABLE_PERFORMANCE_MONITORING: "true"
  PERFORMANCE_LOG_INTERVAL: "300"

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: intelligent-classification-service
  namespace: historical-text
  labels:
    app: intelligent-classification-service
    component: api
    version: v1.0.0
spec:
  replicas: 3
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
      maxSurge: 1
  selector:
    matchLabels:
      app: intelligent-classification-service
      component: api
  template:
    metadata:
      labels:
        app: intelligent-classification-service
        component: api
        version: v1.0.0
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "8007"
        prometheus.io/path: "/metrics"
    spec:
      securityContext:
        runAsNonRoot: true
        runAsUser: 1001
        runAsGroup: 1001
        fsGroup: 1001
      containers:
      - name: intelligent-classification-service
        image: intelligent-classification-service:1.0.0
        imagePullPolicy: IfNotPresent
        ports:
        - name: http
          containerPort: 8007
          protocol: TCP
        envFrom:
        - configMapRef:
            name: intelligent-classification-config
        env:
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        resources:
          requests:
            cpu: 500m
            memory: 1Gi
          limits:
            cpu: 2000m
            memory: 4Gi
        livenessProbe:
          httpGet:
            path: /health
            port: http
          initialDelaySeconds: 60
          periodSeconds: 30
          timeoutSeconds: 10
          failureThreshold: 3
          successThreshold: 1
        readinessProbe:
          httpGet:
            path: /ready
            port: http
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
          successThreshold: 1
        startupProbe:
          httpGet:
            path: /health
            port: http
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 30
          successThreshold: 1
        volumeMounts:
        - name: models-storage
          mountPath: /app/models
        - name: cache-storage
          mountPath: /app/cache
        - name: mlflow-storage
          mountPath: /app/mlflow
        - name: logs-storage
          mountPath: /app/logs
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: false
          runAsNonRoot: true
          runAsUser: 1001
          capabilities:
            drop:
            - ALL
      volumes:
      - name: models-storage
        persistentVolumeClaim:
          claimName: intelligent-classification-models-pvc
      - name: cache-storage
        persistentVolumeClaim:
          claimName: intelligent-classification-cache-pvc
      - name: mlflow-storage
        persistentVolumeClaim:
          claimName: intelligent-classification-mlflow-pvc
      - name: logs-storage
        emptyDir: {}
      restartPolicy: Always
      terminationGracePeriodSeconds: 30
      dnsPolicy: ClusterFirst
      serviceAccountName: intelligent-classification-service
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app
                  operator: In
                  values:
                  - intelligent-classification-service
              topologyKey: kubernetes.io/hostname

---
apiVersion: v1
kind: Service
metadata:
  name: intelligent-classification-service
  namespace: historical-text
  labels:
    app: intelligent-classification-service
    component: api
  annotations:
    prometheus.io/scrape: "true"
    prometheus.io/port: "8007"
    prometheus.io/path: "/metrics"
spec:
  type: ClusterIP
  ports:
  - name: http
    port: 8007
    targetPort: http
    protocol: TCP
  selector:
    app: intelligent-classification-service
    component: api

---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: intelligent-classification-service
  namespace: historical-text
  labels:
    app: intelligent-classification-service
    component: service-account

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: intelligent-classification-models-pvc
  namespace: historical-text
  labels:
    app: intelligent-classification-service
    component: storage
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 10Gi
  storageClassName: fast-ssd

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: intelligent-classification-cache-pvc
  namespace: historical-text
  labels:
    app: intelligent-classification-service
    component: storage
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 5Gi
  storageClassName: fast-ssd

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: intelligent-classification-mlflow-pvc
  namespace: historical-text
  labels:
    app: intelligent-classification-service
    component: storage
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 5Gi
  storageClassName: standard

---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: intelligent-classification-hpa
  namespace: historical-text
  labels:
    app: intelligent-classification-service
    component: autoscaler
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: intelligent-classification-service
  minReplicas: 2
  maxReplicas: 10
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 70
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: 80
  behavior:
    scaleDown:
      stabilizationWindowSeconds: 300
      policies:
      - type: Percent
        value: 10
        periodSeconds: 60
    scaleUp:
      stabilizationWindowSeconds: 60
      policies:
      - type: Percent
        value: 50
        periodSeconds: 60

---
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: intelligent-classification-pdb
  namespace: historical-text
  labels:
    app: intelligent-classification-service
    component: pdb
spec:
  minAvailable: 1
  selector:
    matchLabels:
      app: intelligent-classification-service
      component: api

---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: intelligent-classification-network-policy
  namespace: historical-text
  labels:
    app: intelligent-classification-service
    component: network-policy
spec:
  podSelector:
    matchLabels:
      app: intelligent-classification-service
  policyTypes:
  - Ingress
  - Egress
  ingress:
  - from:
    - namespaceSelector:
        matchLabels:
          name: historical-text
    - namespaceSelector:
        matchLabels:
          name: ingress-nginx
    ports:
    - protocol: TCP
      port: 8007
  egress:
  - to:
    - namespaceSelector:
        matchLabels:
          name: historical-text
    ports:
    - protocol: TCP
      port: 8002  # storage-service
    - protocol: TCP
      port: 8004  # nlp-service
    - protocol: TCP
      port: 8006  # knowledge-graph-service
  - to: []
    ports:
    - protocol: TCP
      port: 53   # DNS
    - protocol: UDP
      port: 53   # DNS
    - protocol: TCP
      port: 443  # HTTPS