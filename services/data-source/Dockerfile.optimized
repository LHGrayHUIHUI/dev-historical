# 数据源服务Docker镜像 - 优化版本
# 用于数据获取和爬虫管理的微服务

FROM python:3.11-slim as base

# 构建参数
ARG BUILD_DATE
ARG GIT_COMMIT
ARG VERSION=latest

# 设置标签
LABEL org.opencontainers.image.created=$BUILD_DATE \
      org.opencontainers.image.version=$VERSION \
      org.opencontainers.image.revision=$GIT_COMMIT \
      org.opencontainers.image.title="Historical Text Data Source Service" \
      org.opencontainers.image.description="数据获取微服务 - 优化版本" \
      org.opencontainers.image.vendor="Historical Text Project"

# 设置环境变量
ENV PYTHONDONTWRITEBYTECODE=1 \
    PYTHONUNBUFFERED=1 \
    PIP_NO_CACHE_DIR=1 \
    PIP_DISABLE_PIP_VERSION_CHECK=1 \
    SERVICE_HOST=0.0.0.0 \
    SERVICE_PORT=8000

# 构建依赖阶段
FROM base as dependencies

# 安装系统依赖（合并命令减少层数）
RUN apt-get update && apt-get install -y --no-install-recommends \
    gcc \
    g++ \
    curl \
    libxml2-dev \
    libxslt-dev \
    && apt-get clean \
    && rm -rf /var/lib/apt/lists/*

WORKDIR /app

# 复制requirements文件
COPY requirements.txt .

# 创建虚拟环境并安装依赖
RUN python -m venv /opt/venv && \
    /opt/venv/bin/pip install --upgrade pip setuptools wheel && \
    /opt/venv/bin/pip install --no-cache-dir -r requirements.txt

# 生产运行阶段
FROM base as production

# 安装运行时依赖
RUN apt-get update && apt-get install -y --no-install-recommends \
    curl \
    libxml2 \
    libxslt1.1 \
    && apt-get clean \
    && rm -rf /var/lib/apt/lists/*

# 复制虚拟环境
COPY --from=dependencies /opt/venv /opt/venv

# 设置虚拟环境路径
ENV PATH="/opt/venv/bin:$PATH" \
    PYTHONPATH=/app

# 创建非root用户
RUN groupadd -r app && useradd -r -g app -u 1001 app && \
    mkdir -p /app/logs /app/data && \
    chown -R app:app /app

WORKDIR /app

# 复制应用代码
COPY --chown=app:app src/ ./src/

# 切换到非root用户
USER app

# 健康检查
HEALTHCHECK --interval=30s --timeout=10s --start-period=40s --retries=3 \
    CMD curl -f http://localhost:${SERVICE_PORT}/health || exit 1

# 暴露端口
EXPOSE ${SERVICE_PORT}

# 启动命令
CMD ["python", "-m", "src.main"]

# 开发阶段
FROM production as development

USER root

# 安装开发工具
RUN /opt/venv/bin/pip install --no-cache-dir \
    pytest==7.4.3 \
    pytest-asyncio==0.21.1 \
    pytest-cov==4.1.0 \
    black==23.11.0 \
    isort==5.12.0

# 复制测试文件
COPY --chown=app:app tests/ ./tests/
COPY --chown=app:app .env.example .env

USER app

# 开发环境启动命令
CMD ["python", "-m", "src.main", "--reload"]